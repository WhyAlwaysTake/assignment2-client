[{"/Users/temirlannurmakhan/Desktop/DB-Assignment2/client/src/index.js":"1","/Users/temirlannurmakhan/Desktop/DB-Assignment2/client/src/App.js":"2","/Users/temirlannurmakhan/Desktop/DB-Assignment2/client/src/reportWebVitals.js":"3","/Users/temirlannurmakhan/Desktop/DB-Assignment2/client/src/pages/Home.js":"4","/Users/temirlannurmakhan/Desktop/DB-Assignment2/client/src/pages/AddEdit.js":"5","/Users/temirlannurmakhan/Desktop/DB-Assignment2/client/src/pages/Edit.js":"6"},{"size":535,"mtime":1668861410198,"results":"7","hashOfConfig":"8"},{"size":716,"mtime":1669031388939,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1668861410199,"results":"10","hashOfConfig":"8"},{"size":14031,"mtime":1669031436356,"results":"11","hashOfConfig":"8"},{"size":19322,"mtime":1669034068293,"results":"12","hashOfConfig":"8"},{"size":17012,"mtime":1669031554487,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cehp4c",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/temirlannurmakhan/Desktop/DB-Assignment2/client/src/index.js",[],[],"/Users/temirlannurmakhan/Desktop/DB-Assignment2/client/src/App.js",[],[],"/Users/temirlannurmakhan/Desktop/DB-Assignment2/client/src/reportWebVitals.js",[],[],"/Users/temirlannurmakhan/Desktop/DB-Assignment2/client/src/pages/Home.js",["34"],[],"import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom';\nimport \"./Home.css\";\nimport {toast} from 'react-toastify';\nimport axios from 'axios';\n\nconst Home = () => {\n    const [data, setData] = useState([]);\n    const [table, setTable] = useState(\"\");\n\n    const loadData = async () => {\n        const response = await axios.get(`http://localhost:4000/api/get/${table}`);\n        setData(response.data);\n    };\n\n    loadData();\n\n    const deleteContact = (table, info) => {\n        if(window.confirm(\"Are you sure to delete?\")){\n            axios.delete(`http://localhost:4000/api/remove/${table}/${info}`);\n            toast.success(\"Data is deleted\");\n            setTimeout(() => loadData(), 300);\n        }   \n    };\n\n    const handleTable = () => {\n\n        return(\n            <><table className=\"styled-table\" style={{\n                display: table === \"DiseaseType\" ? '' : 'none',\n            }}>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Description</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map((item) => {\n                        return (\n                            <tr key={item.id}>\n                                <td>{item.id}</td>\n                                <td>{item.description}</td>\n                                <td>\n                                    <Link to={`/update/${table}/${item.id}`}>\n                                        <button className=\"btn btn-edit\">Edit</button>\n                                    </Link>\n                                    <button className=\"btn btn-delete\" onClick={() => deleteContact(table, item.id)}>Delete</button>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table> \n            <table className=\"styled-table\" style={{\n                display: table === \"Disease\" ? '' : 'none',\n             }}>\n                    <thead>\n                        <tr>\n                            <th>Disease_code</th>\n                            <th>Pathogen</th>\n                            <th>Description</th>\n                            <th>ID</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map((item) => {\n                            return (\n                                <tr key={item.disease_code}>\n                                    <td>{item.disease_code}</td>\n                                    <td>{item.pathogen}</td>\n                                    <td>{item.description}</td>\n                                    <td>{item.id}</td>\n                                    <td>\n                                        <Link to={`/update/${table}/${item.disease_code}`}>\n                                            <button className=\"btn btn-edit\">Edit</button>\n                                        </Link>\n                                        <button className=\"btn btn-delete\" onClick={() => deleteContact(table, item.disease_code)}>Delete</button>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table> \n                <table className=\"styled-table\" style={{\n                        display: table === \"Discover\" ? '' : 'none',\n                 }}>\n                    <thead>\n                        <tr>\n                            <th>Disease_code</th>\n                            <th>Country</th>\n                            <th>History</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map((item) => {\n                            return (\n                                <tr key={item.disease_code}>\n                                    <td>{item.disease_code}</td>\n                                    <td>{item.cname}</td>\n                                    <td>{item.first_enc_date}</td>\n                                    <td>\n                                        <Link to={`/update/${table}/${item.disease_code}`}>\n                                            <button className=\"btn btn-edit\">Edit</button>\n                                        </Link>\n                                        <button className=\"btn btn-delete\" onClick={() => deleteContact(table, item.disease_code)}>Delete</button>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n                <table className=\"styled-table\" style={{\n                        display: table === \"Country\" ? '' : 'none',\n                 }}>\n                    <thead>\n                        <tr>\n                            <th>Country</th>\n                            <th>Population</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map((item) => {\n                            return (\n                                <tr key={item.cname}>\n                                    <td>{item.cname}</td>\n                                    <td>{item.population}</td>\n                                    <td>\n                                        <Link to={`/update/${table}/${item.cname}`}>\n                                            <button className=\"btn btn-edit\">Edit</button>\n                                        </Link>\n                                        <button className=\"btn btn-delete\" onClick={() => deleteContact(table, item.cname)}>Delete</button>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n                <table className=\"styled-table\" style={{\n                        display: table === \"Users\" ? '' : 'none',\n                 }}>\n                    <thead>\n                        <tr>\n                            <th>Email</th>\n                            <th>Name</th>\n                            <th>Surname</th>\n                            <th>Salary</th>\n                            <th>Phone</th>\n                            <th>Country</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map((item) => {\n                            return (\n                                <tr key={item.email}>\n                                    <td>{item.email}</td>\n                                    <td>{item.name}</td>\n                                    <td>{item.surname}</td>\n                                    <td>{item.salary}</td>\n                                    <td>{item.phone}</td>\n                                    <td>{item.cname}</td>\n                                    <td>\n                                        <Link to={`/update/${table}/${item.email}`}>\n                                            <button className=\"btn btn-edit\">Edit</button>\n                                        </Link>\n                                        <button className=\"btn btn-delete\" onClick={() => deleteContact(table, item.email)}>Delete</button>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n                <table className=\"styled-table\" style={{\n                        display: table === \"PublicServant\" ? '' : 'none',\n                 }}>\n                    <thead>\n                        <tr>\n                            <th>Email</th>\n                            <th>Department</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map((item) => {\n                            return (\n                                <tr key={item.email}>\n                                    <td>{item.email}</td>\n                                    <td>{item.department}</td>\n                                    <td>\n                                        <Link to={`/update/${table}/${item.email}`}>\n                                            <button className=\"btn btn-edit\">Edit</button>\n                                        </Link>\n                                        <button className=\"btn btn-delete\" onClick={() => deleteContact(table, item.email)}>Delete</button>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n                <table className=\"styled-table\" style={{\n                        display: table === \"Doctor\" ? '' : 'none',\n                 }}>\n                    <thead>\n                        <tr>\n                            <th>Email</th>\n                            <th>Degree</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map((item) => {\n                            return (\n                                <tr key={item.email}>\n                                    <td>{item.email}</td>\n                                    <td>{item.degree}</td>\n                                    <td>\n                                        <Link to={`/update/${table}/${item.email}`}>\n                                            <button className=\"btn btn-edit\">Edit</button>\n                                        </Link>\n                                        <button className=\"btn btn-delete\" onClick={() => deleteContact(table, item.email)}>Delete</button>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n                <table className=\"styled-table\" style={{\n                        display: table === \"Specialize\" ? '' : 'none',\n                 }}>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Email</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map((item) => {\n                            return (\n                                <tr key={item.email}>\n                                    <td>{item.id}</td>\n                                    <td>{item.email}</td>\n                                    <td>\n                                        <Link to={`/update/${table}/${item.email}`}>\n                                            <button className=\"btn btn-edit\">Edit</button>\n                                        </Link>\n                                        <button className=\"btn btn-delete\" onClick={() => deleteContact(table, item.email)}>Delete</button>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n                <table className=\"styled-table\" style={{\n                        display: table === \"Record\" ? '' : 'none',\n                 }}>\n                    <thead>\n                        <tr>\n                            <th>Email</th>\n                            <th>Country</th>\n                            <th>Disease Code</th>\n                            <th>Total Deaths</th>\n                            <th>Total Patients</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map((item) => {\n                            return (\n                                <tr key={item.email}>\n                                    <td>{item.email}</td>\n                                    <td>{item.cname}</td>\n                                    <td>{item.disease_code}</td>\n                                    <td>{item.total_deaths}</td>\n                                    <td>{item.total_patients}</td>\n                                    <td>\n                                        <Link to={`/update/${table}/${item.email}`}>\n                                            <button className=\"btn btn-edit\">Edit</button>\n                                        </Link>\n                                        <button className=\"btn btn-delete\" onClick={() => deleteContact(table, item.email)}>Delete</button>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n                </>\n            \n        )\n    }\n\n    return (\n            <div>\n                <label>Choose a Table:</label>\n                <select onChange={(e)=>{setTable(e.target.value)}} value = {table}>\n                    <option value=\"\">Select</option>\n                    <option value=\"DiseaseType\">DiseaseType</option>\n                    <option value=\"Disease\">Disease</option>\n                    <option value=\"Country\">Country</option>\n                    <option value=\"Discover\">Discover</option>\n                    <option value=\"Users\">Users</option>\n                    <option value=\"PublicServant\">PublicServant</option>\n                    <option value=\"Doctor\">Doctor</option>\n                    <option value=\"Specialize\">Specialize</option>\n                    <option value=\"Record\">Record</option>\n                </select>\n\n                <br></br>\n                <Link to=\"/addContact\">            \n                    <button className = \"btn btn-contact\">Add New User</button>\n                </Link>\n                {handleTable()}\n            </div>\n    )\n}\nexport default Home;\n\n","/Users/temirlannurmakhan/Desktop/DB-Assignment2/client/src/pages/AddEdit.js",["35","36"],[],"import React, {useState, useEffect} from 'react'\nimport {useNavigate, useParams, Link} from 'react-router-dom';\nimport './AddEdit.css';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst initialState = {\n    id: \"\", description: \"\", cname: \"\", population: \"\", disease_code: \"\",\n    pathogen: \"\", first_enc_date:\"\", email: \"\", name: \"\", surname: \"\", salary: \"\",\n    phone: \"\", department: \"\", degree: \"\", total_deaths: \"\", total_patients: \"\",\n}\nconst AddEdit = () =>  {\n        const [state, setState] = useState(initialState)\n        const {id, description, cname, population, disease_code, pathogen, first_enc_date, email,name, surname, salary, phone, department, degree, total_deaths, total_patients} = state;\n        const [table, setTable] = useState(\"\");\n        const navigate = useNavigate();\n\n        const handleSubmit = (e) => {\n            e.preventDefault();\n            if(table === \"DiseaseType\"){\n                if(description === \"\"){\n                    toast.error(\"Empty values!\");\n                }\n                else{\n                    axios.post('http://localhost:4000/api/post/DiseaseType', {description,})\n                    .then(()=> {\n                        setState({  id: \"\", description: \"\", cname: \"\", population: \"\", disease_code: \"\",\n                        pathogen: \"\", first_enc_date:\"\", email: \"\", name: \"\", surname: \"\", salary: \"\",\n                        phone: \"\", department: \"\", degree: \"\", total_deaths: \"\", total_patients: \"\",})\n                    })   \n                    .catch((err) => toast.error(err.response.data));\n                    toast.success(\"Success\");\n                    setTimeout(() => navigate(\"/\"), 300);\n                }\n            }\n            else if(table === \"Country\"){\n                if(!cname || !population){\n                    toast.error(\"Empty values!\");\n                }\n                else{\n                    axios.post(`http://localhost:4000/api/post/${table}`, {\n                        cname, population,\n                    })\n                    .then(()=> {\n                        setState({  id: \"\", description: \"\", cname: \"\", population: \"\", disease_code: \"\",\n                        pathogen: \"\", first_enc_date:\"\", email: \"\", name: \"\", surname: \"\", salary: \"\",\n                        phone: \"\", department: \"\", degree: \"\", total_deaths: \"\", total_patients: \"\",})\n                    })   \n                    .catch((err) => toast.error(err.response.data));\n                    toast.success(\"Success\");\n                    setTimeout(() => navigate(\"/\"), 300);\n                }\n            }\n            else if(table === \"Disease\"){\n                if(!disease_code || !pathogen || !description || !id){\n                    toast.error(\"Empty values!\");\n                }\n                else{\n                    axios.post(`http://localhost:4000/api/post/${table}`, {\n                        disease_code, pathogen, description, id,\n                    })\n                    .then(()=> {\n                        setState({  id: \"\", description: \"\", cname: \"\", population: \"\", disease_code: \"\",\n                        pathogen: \"\", first_enc_date:\"\", email: \"\", name: \"\", surname: \"\", salary: \"\",\n                        phone: \"\", department: \"\", degree: \"\", total_deaths: \"\", total_patients: \"\",})\n                    })   \n                    .catch((err) => toast.error(err.response.data));\n                    toast.success(\"Success\");\n                    setTimeout(() => navigate(\"/\"), 300);\n                }\n            }\n            else if(table === \"Discover\"){\n                if(!disease_code || !cname || !first_enc_date){\n                    toast.error(\"Empty values!\");\n                }\n                else{\n                    axios.post(`http://localhost:4000/api/post/Discover`, {\n                        disease_code, cname, first_enc_date,\n                    })\n                    .then(()=> {\n                        setState({  id: \"\", description: \"\", cname: \"\", population: \"\", disease_code: \"\",\n                        pathogen: \"\", first_enc_date:\"\", email: \"\", name: \"\", surname: \"\", salary: \"\",\n                        phone: \"\", department: \"\", degree: \"\", total_deaths: \"\", total_patients: \"\",})\n                    })   \n                    .catch((err) => toast.error(err.response.data));\n                    toast.success(\"Success\");\n                    setTimeout(() => navigate(\"/\"), 300);\n                }\n            }\n\n            else if(table === \"Users\"){\n                if(!email || !name || !surname || !salary || !phone || !cname){\n                    toast.error(\"Empty values!\");\n                }\n                else{\n                    axios.post('http://localhost:4000/api/post/Users', {\n                        email, name, surname, salary, phone, cname,\n                    })\n                    .then(()=> {\n                        setState({  id: \"\", description: \"\", cname: \"\", population: \"\", disease_code: \"\",\n                        pathogen: \"\", first_enc_date:\"\", email: \"\", name: \"\", surname: \"\", salary: \"\",\n                        phone: \"\", department: \"\", degree: \"\", total_deaths: \"\", total_patients: \"\",})\n                    })   \n                    .catch((err) => toast.error(err.response.data));\n                    toast.success(\"Success\");\n                    setTimeout(() => navigate(\"/\"), 300);\n                }\n            }\n\n            else if(table === \"PublicServant\"){\n                if(!email || !department){\n                    toast.error(\"Empty values!\");\n                }\n                else{\n                    axios.post(`http://localhost:4000/api/post/${table}`, {\n                        email, department,\n                    })\n                    .then(()=> {\n                        setState({  id: \"\", description: \"\", cname: \"\", population: \"\", disease_code: \"\",\n                        pathogen: \"\", first_enc_date:\"\", email: \"\", name: \"\", surname: \"\", salary: \"\",\n                        phone: \"\", department: \"\", degree: \"\", total_deaths: \"\", total_patients: \"\",})\n                    })   \n                    .catch((err) => toast.error(err.response.data));\n                    toast.success(\"Success\");\n                    setTimeout(() => navigate(\"/\"), 300);\n                }\n            }\n\n            else if(table === \"Doctor\"){\n                if(!email || !degree){\n                    toast.error(\"Empty values!\");\n                }\n                else{\n                    axios.post(`http://localhost:4000/api/post/${table}`, {\n                        email, degree,\n                    })\n                    .then(()=> {\n                        setState({  id: \"\", description: \"\", cname: \"\", population: \"\", disease_code: \"\",\n                        pathogen: \"\", first_enc_date:\"\", email: \"\", name: \"\", surname: \"\", salary: \"\",\n                        phone: \"\", department: \"\", degree: \"\", total_deaths: \"\", total_patients: \"\",})\n                    })   \n                    .catch((err) => toast.error(err.response.data));\n                    toast.success(\"Success\");\n                    setTimeout(() => navigate(\"/\"), 300);\n                }\n            }\n\n            else if(table === \"Specialize\"){\n                if(!id || !email){\n                    toast.error(\"Empty values!\");\n                }\n                else{\n                    axios.post(`http://localhost:4000/api/post/${table}`, {\n                        id, email,\n                    })\n                    .then(()=> {\n                        setState({  id: \"\", description: \"\", cname: \"\", population: \"\", disease_code: \"\",\n                        pathogen: \"\", first_enc_date:\"\", email: \"\", name: \"\", surname: \"\", salary: \"\",\n                        phone: \"\", department: \"\", degree: \"\", total_deaths: \"\", total_patients: \"\",})\n                    })   \n                    .catch((err) => toast.error(err.response.data));\n                    toast.success(\"Success\");\n                    setTimeout(() => navigate(\"/\"), 300);\n                }\n            }\n\n            else if(table === \"Record\"){\n                if(!email || !cname || !disease_code || !total_deaths || !total_patients){\n                    toast.error(\"Empty values!\");\n                }\n                else{\n                    axios.post(`http://localhost:4000/api/post/${table}`, {\n                        email, cname, disease_code, total_deaths, total_patients,\n                    })\n                    .then(()=> {\n                        setState({  id: \"\", description: \"\", cname: \"\", population: \"\", disease_code: \"\",\n                        pathogen: \"\", first_enc_date:\"\", email: \"\", name: \"\", surname: \"\", salary: \"\",\n                        phone: \"\", department: \"\", degree: \"\", total_deaths: \"\", total_patients: \"\",})\n                    })   \n                    .catch((err) => toast.error(err.response.data));\n                    toast.success(\"Success\");\n                    setTimeout(() => navigate(\"/\"), 300);\n                }\n            }\n        };\n\n        const handleInputChange = (e) => {\n            const {name, value} = e.target;\n            setState({...state, [name]: value});\n        };\n\n        const handleForm = () => {\n            return (\n\n            <>\n                <form style={{ maxWidth: \"400px\", margin: \"auto\", alignContent: \"center\", display: table === \"DiseaseType\" ? '' : 'none', }} onSubmit={handleSubmit}>\n                    <label htmlFor='description'>Description</label>\n                    <input type=\"text\" id=\"description\" name=\"description\" placeholder='description' value={description} onChange={handleInputChange} />\n                    <input type=\"submit\" value=\"Save\" />\n                    <Link to = \"/\">\n                            <input type = \"button\" value=\"Go Back\"/>\n                    </Link> \n                </form>\n\n                <form style={{ maxWidth: \"400px\", margin: \"auto\", alignContent: \"center\", display: table === \"Country\" ? '' : 'none', }} onSubmit={handleSubmit}>\n                    <label htmlFor='cname'>Country</label>\n                    <input type=\"text\" id=\"cname\" name=\"cname\" placeholder='Country' value={cname} onChange={handleInputChange} />\n                    <label htmlFor='population'>Population</label>\n                    <input type=\"number\" id=\"population\" name=\"population\" placeholder='Population' value={population} onChange={handleInputChange} />\n                    <input type=\"submit\" value=\"Save\" />\n                    <Link to = \"/\">\n                        <input type = \"button\" value=\"Go Back\"/>\n                    </Link> \n                </form>\n\n                <form style={{ maxWidth: \"400px\", margin: \"auto\", alignContent: \"center\", display: table === \"Disease\" ? '' : 'none', }} onSubmit={handleSubmit}>\n                    <label htmlFor='disease_code'>Disease Code</label>\n                    <input type=\"text\" id=\"disease_code\" name=\"disease_code\" placeholder='Disease code' value={disease_code} onChange={handleInputChange} />\n                    <label htmlFor='population'>Pathogen</label>\n                    <input type=\"text\" id=\"pathogen\" name=\"pathogen\" placeholder='Pathogen' value={pathogen} onChange={handleInputChange} />\n                    <label htmlFor='population'>Description</label>\n                    <input type=\"text\" id=\"description\" name=\"description\" placeholder='Description' value={description} onChange={handleInputChange} />\n                    <label htmlFor='population'>ID</label>\n                    <input type=\"number\" id=\"id\" name=\"id\" placeholder='ID' value={id} onChange={handleInputChange} />\n                    <input type=\"submit\" value=\"Save\" />\n                    <Link to = \"/\">\n                        <input type = \"button\" value=\"Go Back\"/>\n                    </Link> \n                </form>\n\n                <form style={{ maxWidth: \"400px\", margin: \"auto\", alignContent: \"center\", display: table === \"Discover\" ? '' : 'none', }} onSubmit={handleSubmit}>\n                    <label htmlFor='disease_code'>Disease Code</label>\n                    <input type=\"text\" id=\"disease_code\" name=\"disease_code\" placeholder='Disease code' value={disease_code} onChange={handleInputChange} />\n                    <label htmlFor='cname'>Country</label>\n                    <input type=\"text\" id=\"cname\" name=\"cname\" placeholder='Country' value={cname} onChange={handleInputChange} />\n                    <label htmlFor='cname'>History(Date)</label>\n                    <input type=\"date\" id=\"first_enc_date\" name=\"first_enc_date\" placeholder='History(Date)' value={first_enc_date} onChange={handleInputChange} />\n                    <input type=\"submit\" value=\"Save\" />\n                    <Link to = \"/\">\n                        <input type = \"button\" value=\"Go Back\"/>\n                    </Link> \n                </form>\n\n                <form style={{ maxWidth: \"400px\", margin: \"auto\", alignContent: \"center\", display: table === \"Users\" ? '' : 'none', }} onSubmit={handleSubmit}>\n                        <label htmlFor='email'>Email</label>\n                        <input type=\"email\" id=\"email\" name=\"email\" placeholder='Email' value={email} onChange={handleInputChange} />\n                        <label htmlFor='name'>Name</label>\n                        <input type=\"text\" id=\"name\" name=\"name\" placeholder='Name' value={name} onChange={handleInputChange} />\n                        <label htmlFor='surname'>Surname</label>\n                        <input type=\"text\" id=\"surname\" name=\"surname\" placeholder='Surname' value={surname} onChange={handleInputChange} />\n                        <label htmlFor='salary'>Salary</label>\n                        <input type=\"number\" id=\"salary\" name=\"salary\" placeholder='Salary' value={salary} onChange={handleInputChange} />\n                        <label htmlFor='phone'>Phone</label>\n                        <input type=\"number\" id=\"phone\" name=\"phone\" placeholder='Phone' value={phone} onChange={handleInputChange} />\n                        <label htmlFor='cname'>Country</label>\n                        <input type=\"text\" id=\"cname\" name=\"cname\" placeholder='Country' value={cname} onChange={handleInputChange} />\n                        <input type=\"submit\" value=\"Save\" />\n                        <Link to = \"/\">\n                            <input type = \"button\" value=\"Go Back\"/>\n                         </Link> \n                </form>\n\n                <form style={{ maxWidth: \"400px\", margin: \"auto\", alignContent: \"center\", display: table === \"PublicServant\" ? '' : 'none', }} onSubmit={handleSubmit}>\n                        <label htmlFor='email'>Email</label>\n                        <input type=\"email\" id=\"email\" name=\"email\" placeholder='Email' value={email} onChange={handleInputChange} />\n                        <label htmlFor='email'>Department</label>\n                        <input type=\"text\" id=\"department\" name=\"department\" placeholder='Department' value={department} onChange={handleInputChange} />\n                        <input type=\"submit\" value=\"Save\" />\n                        <Link to = \"/\">\n                            <input type = \"button\" value=\"Go Back\"/>\n                        </Link> \n                </form>\n\n                <form style={{ maxWidth: \"400px\", margin: \"auto\", alignContent: \"center\", display: table === \"Doctor\" ? '' : 'none', }} onSubmit={handleSubmit}>\n                        <label htmlFor='email'>Email</label>\n                        <input type=\"email\" id=\"email\" name=\"email\" placeholder='Email' value={email} onChange={handleInputChange} />\n                        <label htmlFor='email'>Degree</label>\n                        <input type=\"text\" id=\"degree\" name=\"department\" placeholder='Degree' value={degree} onChange={handleInputChange} />\n                        <input type=\"submit\" value=\"Save\" />\n                        <Link to = \"/\">\n                            <input type = \"button\" value=\"Go Back\"/>\n                        </Link> \n                </form>\n\n                <form style={{ maxWidth: \"400px\", margin: \"auto\", alignContent: \"center\", display: table === \"Specialize\" ? '' : 'none', }} onSubmit={handleSubmit}>\n                        <label htmlFor='email'>ID</label>\n                        <input type=\"number\" id=\"id\" name=\"id\" placeholder='ID' value={id} onChange={handleInputChange} />\n                        <label htmlFor='email'>Email</label>\n                        <input type=\"email\" id=\"email\" name=\"email\" placeholder='Email' value={email} onChange={handleInputChange} />\n                        <input type=\"submit\" value=\"Save\" />\n                        <Link to = \"/\">\n                            <input type = \"button\" value=\"Go Back\"/>\n                        </Link> \n                </form>\n\n                <form style={{ maxWidth: \"400px\", margin: \"auto\", alignContent: \"center\", display: table === \"Record\" ? '' : 'none', }} onSubmit={handleSubmit}>\n                        <label htmlFor='email'>Email</label>\n                        <input type=\"email\" id=\"email\" name=\"email\" placeholder='Email' value={email} onChange={handleInputChange} />\n                        <label htmlFor='cname'>Country</label>\n                        <input type=\"text\" id=\"cname\" name=\"cname\" placeholder='Country' value={cname} onChange={handleInputChange} />\n                        <label htmlFor='disease_code'>Disease Code</label>\n                        <input type=\"text\" id=\"disease_code\" name=\"disease_code\" placeholder='Disease code' value={disease_code} onChange={handleInputChange} />\n                        <label htmlFor='salary'>Total Deaths</label>\n                        <input type=\"number\" id=\"total_deaths\" name=\"total_deaths\" placeholder='Total Deaths' value={total_deaths} onChange={handleInputChange} />\n                        <label htmlFor='phone'>Total Patients</label>\n                        <input type=\"number\" id=\"total_patients\" name=\"total_patients\" placeholder='Total Patients' value={total_patients} onChange={handleInputChange} />\n                        <input type=\"submit\" value=\"Save\" />\n                        <Link to = \"/\">\n                            <input type = \"button\" value=\"Go Back\"/>\n                         </Link> \n                </form>\n\n                </>\n\n            )\n        }\n    return (\n        <div style={{marginTop:\"100px\"}}>\n            <label>Choose a Table:</label>\n                <select onChange={(e)=>{setTable(e.target.value)}} value = {table}>\n                    <option value=\"\">Select</option>\n                    <option value=\"DiseaseType\">DiseaseType</option>\n                    <option value=\"Disease\">Disease</option>\n                    <option value=\"Country\">Country</option>\n                    <option value=\"Discover\">Discover</option>\n                    <option value=\"Users\">Users</option>\n                    <option value=\"PublicServant\">PublicServant</option>\n                    <option value=\"Doctor\">Doctor</option>\n                    <option value=\"Specialize\">Specialize</option>\n                    <option value=\"Record\">Record</option>\n            </select>\n            {handleForm()}\n        </div>\n    )\n}\nexport default AddEdit","/Users/temirlannurmakhan/Desktop/DB-Assignment2/client/src/pages/Edit.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":1,"column":26,"nodeType":"39","messageId":"40","endLine":1,"endColumn":35},{"ruleId":"37","severity":1,"message":"38","line":1,"column":26,"nodeType":"39","messageId":"40","endLine":1,"endColumn":35},{"ruleId":"37","severity":1,"message":"41","line":2,"column":22,"nodeType":"39","messageId":"40","endLine":2,"endColumn":31},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used."]